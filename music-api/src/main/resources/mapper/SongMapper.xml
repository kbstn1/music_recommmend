<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.music.dao.SongMapper" >
    <resultMap id="BaseResultMap" type="com.music.domain.Song" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="singer_name" property="singerName" jdbcType="VARCHAR" />
        <result column="introduction" property="introduction" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="pic" property="pic" jdbcType="VARCHAR" />
        <result column="url" property="url" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, name, singer_name, introduction, create_time, update_time, pic
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select *
        <!--<include refid="Base_Column_List" />-->
        <!--,-->
        <!--<include refid="Blob_Column_List" />-->
        from song
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="allSong" resultMap="BaseResultMap">
        select *
        <!--<include refid="Base_Column_List" />-->
        <!--,-->
        <!--<include refid="Blob_Column_List" />-->
        from song
    </select>
    <select id="songOfId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select *
        from song
        where id = #{id, jdbcType=INTEGER}
    </select>
    <select id="songOfSingerName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select *
        from song
        where singer_name like #{singerName, jdbcType=VARCHAR}
    </select>
    <select id="songOfName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select *
        from song
        where name like #{name, jdbcType=VARCHAR}
    </select>
    <delete id="deleteSong" parameterType="java.lang.Integer" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from song
        where id = #{id, jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.music.domain.Song" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into song (id, name, singer_name,
        introduction, create_time, update_time,
        pic)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{singerName,jdbcType=VARCHAR},
        #{introduction,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
        #{pic,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.music.domain.Song" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into song
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="singerName != null" >
                singer_name,
            </if>
            <if test="introduction != null" >
                introduction,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="pic != null" >
                pic,
            </if>
            <if test="url != null" >
                url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="singerName != null" >
                #{singerName,jdbcType=VARCHAR},
            </if>
            <if test="introduction != null" >
                #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="pic != null" >
                #{pic,jdbcType=VARCHAR},
            </if>
            <if test="url != null" >
                #{url,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateSongMsg" parameterType="com.music.domain.Song" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update song
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="singerName != null" >
                singer_name = #{singerName,jdbcType=VARCHAR},
            </if>
            <if test="introduction != null" >
                introduction = #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="pic != null" >
                pic = #{pic,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateSongUrl" parameterType="com.music.domain.Consumer" >
        update song
        <set >
            <if test="url != null" >
                url = #{url,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateSongPic" parameterType="com.music.domain.Consumer" >
        update song
        <set >
            <if test="pic != null" >
                pic = #{pic,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.music.domain.Song" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update song
        set name = #{name,jdbcType=VARCHAR},
        singer_name = #{singerName,jdbcType=VARCHAR},
        introduction = #{introduction,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        pic = #{pic,jdbcType=VARCHAR},
        url = #{url,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.music.domain.Song" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update song
        set name = #{name,jdbcType=VARCHAR},
        singer_name = #{singerName,jdbcType=VARCHAR},
        introduction = #{introduction,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        pic = #{pic,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="collectSongOfUser" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select * from song,collect where collect.user_id=#{userId} and collect.song_id=song.id
    </select>
    <select id="selectByKeyword" resultMap="BaseResultMap" parameterType="java.lang.String">
        select *
        from song
        where singer_name like #{keyword, jdbcType=VARCHAR} or name like  #{keyword, jdbcType=VARCHAR}
    </select>
    <select id="selectPlayRank" resultMap="BaseResultMap">
        select * from song,(select song_id,count(song_id) as count
                            from play
                            group by song_id limit 50) as Temp
        where song.id=Temp.song_id order by Temp.count desc
    </select>
    <select id="selectDownloadRank" resultMap="BaseResultMap">
        select * from song,(select song_id,count(song_id) as count
                            from download
                            group by song_id limit 50) as Temp
        where song.id=Temp.song_id order by Temp.count desc
    </select>
    <select id="selectCollectRank" resultMap="BaseResultMap">
        select * from song,(select song_id,count(song_id) as count
                            from collect
                            group by song_id limit 50) as Temp
        where song.id=Temp.song_id order by Temp.count desc
    </select>
    <select id="selectHotRank" resultMap="BaseResultMap">
        select * from song,(select song_id,count(song_id) as count
                            from play
                            where month(create_time) >= month(now())-1
                            group by song_id limit 50) as Temp
        where song.id=Temp.song_id order by Temp.count desc
    </select>
</mapper>
